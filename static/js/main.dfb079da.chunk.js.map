{"version":3,"sources":["data/numbers.js","marker.js","influenceFlag.js","TableEntry.js","data/markerData.js","App.js","serviceWorker.js","index.js"],"names":["initialCenter","initialZoom","starMarkerStyle","position","width","height","left","top","border","borderRadius","backgroundColor","display","justifyContent","alignItems","color","fontSize","fontWeight","padding","markerStyleHover","Object","objectSpread","M_WIDTH","zIndex","microMarkerStyle","borderColor","midMarkerStyle","macroMarkerStyle","Marker","style","this","props","marker","influence","$hover","activeMarker","Handle","react_default","a","createElement","text","Component","defaultProps","handle","starInfluenceStyle","INFLUENCE_FLAG_LENGTH","minWidth","paddingLeft","fontFamily","letterSpacing","microInfluenceStyle","midInfluenceStyle","macroInfluenceStyle","InfluenceFlag","influenceText","cellStyle","borderBottom","cellSelectedStyle","entryStyle","infoStyle","flexDirection","whiteSpace","bodyStyle","nameStyle","paddingBottom","handleStyle","locStyle","TableEntry","cellStyleFinal","influenceFlag_InfluenceFlag","markerList","Followers","Influencer-Score","Latitude","Longitude","Total Tweets by user","Tweet","User","User location","apiIsLoaded","map","maps","finalData","state","e","console","log","bounds","LatLngBounds","forEach","extend","LatLng","getMapBounds","fitBounds","event","addDomListenerOnce","addDomListener","window","bindResizeListener","convertScore","abbreviate","require","Math","round","toString","titleStyle","SimpleMap","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_onChildClick","setState","center","lat","lng","zoom","places","dataIsLoaded","data","_this2","fetch","method","mode","then","res","json","result","starA","values","star","i","length","macroA","macro","j","midA","mid","k","microA","micro","l","concat","isLoaded","error","_this3","_this$state","message","react_splitter_layout_lib_default","primaryIndex","primaryMinSize","innerWidth","secondaryMinSize","lib_default","bootstrapURLKeys","key","hoverDistance","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","_ref","onChildClick","index","marker_Marker","hover","hoverKey","TableEntry_TableEntry","dist","dataSource","sourceType","screenName","options","username","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfb079da.chunk.js","sourcesContent":["const initialCenter = [39, -95.7129];\nconst initialZoom = 4.5;\nconst M_WIDTH = 20;\nconst MICRO_COLOR = '#FDF8EC';\nconst MID_COLOR = '#F7E5B3';\nconst MACRO_COLOR = '#F1D27A';\nconst STAR_COLOR = '#ECBF42';\n\nexport {\n  initialCenter,\n  initialZoom,\n  M_WIDTH,\n  MICRO_COLOR,\n  MID_COLOR,\n  MACRO_COLOR,\n  STAR_COLOR,\n};\n","// Component for map marker\n// Given an influencer, displays their location and influencer level, as well\n// as their abbreviated follower count\n// On hover, the marker enlarges and on click, the map re-centers around it\n// and updates the active marker\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  M_WIDTH,\n  MICRO_COLOR,\n  MID_COLOR,\n  MACRO_COLOR,\n  STAR_COLOR,\n} from './data/numbers'\n\n\n// marker style for STAR influencers\nconst starMarkerStyle = {\n  position: 'absolute',\n  width: M_WIDTH,\n  height: M_WIDTH,\n  left: -M_WIDTH / 2,\n  top: -M_WIDTH / 2,\n\n  border: '5px solid #ecbf42',\n  borderRadius: M_WIDTH,\n  backgroundColor: STAR_COLOR,\n  display: 'flex',\n  justifyContent:'center',\n  alignItems:'center',\n  color: 'white',\n  fontSize: 12,\n  fontWeight: 'bold',\n  padding: 4,\n};\n\n// marker style on hover\nconst markerStyleHover = {\n  ...starMarkerStyle,\n  border: '5px solid black',\n  color: 'black',\n  backgroundColor: 'white',\n  borderRadius: 50,\n  width: M_WIDTH*2,\n  height: M_WIDTH*2,\n  left: -M_WIDTH*2/ 2,\n  top: -M_WIDTH*2 / 2,\n  zIndex: 1,\n};\n\nconst microMarkerStyle = {\n  ...starMarkerStyle,\n  backgroundColor: MICRO_COLOR,\n  borderColor: MICRO_COLOR,\n  color: 'black',\n}\n\nconst midMarkerStyle = {\n  ...starMarkerStyle,\n  backgroundColor: MID_COLOR,\n  borderColor: MID_COLOR,\n  color: 'black',\n}\n\nconst macroMarkerStyle = {\n  ...starMarkerStyle,\n  backgroundColor: MACRO_COLOR,\n  borderColor: MACRO_COLOR,\n}\n\n\nexport default class Marker extends Component {\n  static propTypes = {\n    text: PropTypes.string, // # of followers\n    handle: PropTypes.string,\n    influence: PropTypes.string,\n    hover: PropTypes.bool,\n    user: PropTypes.string,\n    followers: PropTypes.number,\n    influencerScore: PropTypes.number,\n    location: PropTypes.string,\n    lat: PropTypes.number,\n    lng: PropTypes.number,\n  };\n\n  static defaultProps = {\n    handle: 'handle',\n  };\n\n\n  render() {\n\n    let style;\n\n    // changes marker color to reflect the influence level\n    if (this.props.marker.influence === \"micro\") {\n      style = microMarkerStyle;\n    } else if (this.props.marker.influence === \"mid\") {\n      style = midMarkerStyle;\n    } else if (this.props.marker.influence === \"macro\") {\n      style = macroMarkerStyle;\n    } else if (this.props.marker.influence === \"star\") {\n      style = starMarkerStyle;\n    }\n\n    // enlargens marker if you hover\n    style = this.props.$hover ? markerStyleHover : style;\n    // enalargens marker if you click as well\n    if ((this.props.activeMarker.Handle === this.props.marker.Handle)) {\n      style = markerStyleHover;\n    }\n\n    return (\n      <a>\n        <div style={style}>\n          {this.props.text}\n        </div>\n      </a>\n    );\n  }\n}\n","// Component for the influence flag.\n// Displays the influence level, and adjusts the background color to reflect\n// appropriate influence level.\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  M_WIDTH,\n  MICRO_COLOR,\n  MID_COLOR,\n  MACRO_COLOR,\n} from './data/numbers'\nimport './fonts.css'\n\nconst INFLUENCE_FLAG_LENGTH = M_WIDTH * 2;\n\n// style for STAR influencer flags\nconst starInfluenceStyle = {\n  width: INFLUENCE_FLAG_LENGTH*2,\n  height: INFLUENCE_FLAG_LENGTH,\n  minWidth: INFLUENCE_FLAG_LENGTH*2,\n\n  display: 'flex',\n  justifyContent:'center',\n  alignItems:'center',\n  paddingLeft: 4,\n\n  // bg color\n  backgroundColor: '#ecbf42',\n\n  // font\n  color: 'black',\n  fontSize: 16,\n  fontWeight: 'bold',\n  fontFamily: 'Roboto Condensed',\n  letterSpacing: 2,\n};\n\nconst microInfluenceStyle = {\n  ...starInfluenceStyle,\n  backgroundColor: MICRO_COLOR,\n}\n\nconst midInfluenceStyle = {\n  ...starInfluenceStyle,\n  backgroundColor: MID_COLOR,\n}\n\nconst macroInfluenceStyle = {\n  ...starInfluenceStyle,\n  backgroundColor: MACRO_COLOR,\n}\n\n\nexport default class InfluenceFlag extends Component {\n  static propTypes = {\n    influence: PropTypes.string,\n    text: PropTypes.string,\n  };\n\n  static defaultProps = {\n    influence: \"star\",\n  };\n\n  render() {\n    let influenceText;\n    let style;\n    /* sets the correct style and text */\n    if (this.props.influence === \"micro\") {\n      influenceText = \"MICRO\";\n      style = microInfluenceStyle;\n    } else if (this.props.influence === \"mid\") {\n      influenceText = \"MID\";\n      style = midInfluenceStyle;\n    } else if (this.props.influence === \"macro\") {\n      influenceText = \"MACRO\";\n      style = macroInfluenceStyle;\n    } else if (this.props.influence === \"star\") {\n      influenceText = \"STAR\";\n      style = starInfluenceStyle;\n    }\n\n    return (\n      <div style={style}>\n        {influenceText}\n      </div>\n    );\n  }\n}\n","// Component for an entry in the influencer table\n// Includes name, handle, location, and influence flag\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  M_WIDTH,\n} from './data/numbers';\nimport InfluenceFlag from './influenceFlag.js';\nimport './fonts.css';\n\nconst cellStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderBottom: '2px solid whitesmoke',\n};\n\nconst cellSelectedStyle = {\n  ...cellStyle,\n  backgroundColor: '#e2f3ff',\n};\n\nconst entryStyle = {\n  display: 'flex',\n  padding: 20,\n};\n\nconst infoStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  whiteSpace: 'wrap',\n  justifyContent: 'start',\n};\n\nconst bodyStyle = {\n  color: 'black',\n  fontSize: 15,\n  fontFamily: 'Roboto',\n};\n\nconst nameStyle = {\n  ...bodyStyle,\n  fontWeight: 'bold',\n  paddingBottom: '0em',\n};\n\nconst handleStyle = {\n  ...bodyStyle,\n  fontSize: 14,\n  color: 'gray',\n  paddingBottom: '1em',\n};\n\nconst locStyle = {\n  ...bodyStyle,\n  fontSize: 12,\n  color: 'gray',\n};\n\nexport default class TableEntry extends Component {\n  static propTypes = {\n    influence: PropTypes.number,\n  };\n\n  render() {\n    // highlights the entry if its marker is active (has been clicked)\n    let cellStyleFinal = cellStyle;\n    if (this.props.activeMarker['Handle'] === this.props.marker['Handle']) {\n      cellStyleFinal = cellSelectedStyle;\n    }\n\n    return (\n      <a>\n        <div style={cellStyleFinal}>\n\n          <div style={entryStyle}>\n            {/* influencer info */}\n            <div style={infoStyle}>\n              <div style={nameStyle}> {this.props.marker['User']} </div>\n              <div style={handleStyle}> @{this.props.marker['Handle']} </div>\n              <div style={locStyle}> {this.props.marker['User location']} </div>\n            </div>\n          </div>\n\n          {/* influence flag */}\n          <div style={{\n            minWidth: M_WIDTH * 4,\n          }}>\n          {this.props.marker && this.props.marker.influence &&\n            <InfluenceFlag\n              influence={this.props.marker.influence}>\n            </InfluenceFlag>\n          }\n          </div>\n        </div>\n      </a>\n    );\n  }\n}\n","const markerList = [\n  {\n    'Followers': 'start',\n    'Handle': \"twitter\",\n    'Influencer-Score': 154655.12831892286,\n    'Latitude': 39.8283,\n    'Longitude': -98.5795,\n    'Total Tweets by user': 10575,\n    'Tweet': \"Hearing Robert Mueller speak today sent an electrifying feeling south of my border that I haven’t felt since before the election. It didn’t matter what he was saying, it was my own personal serenade. Your move, Congress.\",\n    'User': \"No selected marker\",\n    'User location': \"N/A\",\n    influence: \"micro\",\n  },\n\n]\n\nexport {markerList};\n","  import React, {Component} from 'react';\n  import GoogleMap from 'google-map-react';\n  import SplitterLayout from 'react-splitter-layout';\n  import 'react-splitter-layout/lib/index.css';\n  import {\n    initialCenter,\n    initialZoom,\n    M_WIDTH,\n  } from './data/numbers'\n  import Marker from './marker.js';\n  import PropTypes from 'prop-types';\n  import TableEntry from './TableEntry.js';\n  import './fonts.css';\n  import { Timeline } from 'react-twitter-widgets';\n\n  // keep track of data\n  import {markerList} from './data/markerData';\n  var finalData = markerList;\n\n  // return map bounds based on list of places\n  const getMapBounds = (map, maps, finalData) => {\n    const bounds = new maps.LatLngBounds();\n    finalData.forEach((marker) => {\n      bounds.extend(new maps.LatLng(\n        marker.Latitude,\n        marker.Longitude,\n      ));\n    });\n    return bounds;\n  };\n\n  // re-center map when resizing the window\n  const bindResizeListener = (map, maps, bounds) => {\n    maps.event.addDomListenerOnce(map, 'idle', () => {\n      maps.event.addDomListener(window, 'resize', () => {\n        map.fitBounds(bounds);\n      });\n    });\n  };\n\n  // fit map to its bounds after the api is loaded\n  const apiIsLoaded = (map, maps, finalData, state, e) => {\n    console.log(state);\n    // console.log(maps);\n    // Get bounds by our places\n    const bounds = getMapBounds(map, maps, finalData);\n    // Fit map to bounds\n    map.fitBounds(bounds);\n    // Bind the resize listener\n    bindResizeListener(map, maps, bounds);\n  };\n\n  // abbreviates the number of followers on each marker\n  const convertScore = (marker) => {\n    var abbreviate = require('number-abbreviate');\n    if (typeof marker['Followers'] === 'string') {\n      return marker['Followers'];\n    } else {\n      return abbreviate(Math.round(marker['Followers'])).toString();\n    }\n  }\n\n  // style for the title\n  const titleStyle = {\n    color: 'black',\n    fontSize: 24,\n    fontFamily: 'Roboto',\n    padding: 15,\n    fontWeight: 'bold',\n  };\n\n  class SimpleMap extends Component {\n    static propTypes = {\n      hoverKey: PropTypes.string, // @controllable\n      clickKey: PropTypes.string, // @controllable\n      onCenterChange: PropTypes.func, // @controllable generated fn\n      onZoomChange: PropTypes.func, // @controllable generated fn\n      onHoverKeyChange: PropTypes.func, // @controllable generated fn\n    };\n\n    // when a marker is clicked, the map re-centers around it and indicates that\n    // it's the active marker by enlarging\n    _onChildClick = (map, marker, maps) => {\n      this.setState({\n        center: [marker.lat, marker.lng],\n        activeMarker: marker.marker,\n      });\n      console.log(\"child clicked\");\n    }\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        activeMarker: {\n          'Handle': 'twitter',\n          'User': 'No selected marker',\n          'User location': 'N/A',\n        },\n        center: initialCenter,\n        zoom: initialZoom,\n        places: null,\n        maps: null,\n        dataIsLoaded: false,\n        data: markerList,\n      }\n    }\n\n    componentDidMount() {\n      const self = this;\n      console.log('mounted!');\n\n      fetch('https://gist.githubusercontent.com/pessoaflavio/340e51f7f14b2832ba5bdbb0a67d6432/raw/eccf68aa9818df16b979c3edab63ff8156c5645b/influencer.json', {\n        method: 'GET',\n        mode: 'cors',\n        })\n      .then(res => res.json())\n      .then((result) => {\n          /* star array */\n          var starA = Object.values(result.star);\n          for (var i = 0; i < starA.length; i++) {\n            starA[i].influence = \"star\";\n          }\n\n          /* macro array */\n          var macroA = Object.values(result.macro);\n          for (var j = 0; j < macroA.length; j++) {\n            macroA[j].influence = \"macro\";\n          }\n\n          // {/* mid array */}\n          var midA = Object.values(result.mid);\n          for (var k = 0; k < midA.length; k++) {\n            midA[k].influence = \"mid\";\n          }\n\n          // {/* micro array */}\n          var microA = Object.values(result.micro);\n          for (var l = 0; l < microA.length; l++) {\n            microA[l].influence = \"micro\";\n          }\n\n          // combine all the arrays together in order from highest rank -> lowest\n          let newStar = starA.concat(macroA);\n          let starB = newStar.concat(midA);\n          let starC = starB.concat(microA);\n          let finalData = starC;\n\n          console.log(finalData);\n          this.setState({isLoaded: true,data: finalData});\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {this.setState({isLoaded: true,error})}\n        )\n\n\n      // makeData(data => self.setState({ data: data}));\n\n      // self.setState(data => makeData())\n      // self.setState({dataIsLoaded: true })\n      //\n      // if(this.state.dataIsLoaded === false) {\n      //   console.log('data not yet loaded');\n      // } else {\n      //   console.log('data loaded');\n      // }\n\n    }\n\n    render() {\n      const { error, isLoaded, data } = this.state;\n      if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div><h1>Loading...</h1></div>;\n    } else {\n      return (\n        // ====\n        <div>\n        {/* restrict sidebar to 20% of the screen */}\n        { this.state && this.state.data &&\n          <SplitterLayout\n          primaryIndex={1}\n          primaryMinSize={window.innerWidth*0.2}\n          secondaryMinSize={window.innerWidth*0.8}>\n            <div style={{ height: '100vh', width: '100%' }}>\n              <GoogleMap\n                bootstrapURLKeys={{key: 'AIzaSyDnupYTnmMzxiKq-hVRGMyaahGowNkFQUc'}}\n                center={this.state.center}\n                zoom={this.state.zoom}\n                hoverDistance={M_WIDTH}\n                yesIWantToUseGoogleMapApiInternals={true}\n                onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps, this.state.data, this.state )}\n                onChildClick={this._onChildClick}\n              >\n                {(this.state.data).map((marker, index) => (\n                    <Marker\n                      key={index}\n                      index={index}\n                      activeMarker = {this.state.activeMarker}\n                      lat={marker['Latitude']}\n                      lng={marker['Longitude']}\n                      text={convertScore(marker)}\n                      hover={this.props.hoverKey === index}\n                      marker={marker}\n                      >\n                    </Marker>\n                ))}\n              </GoogleMap>\n            </div>\n\n            {/* sidebar */}\n            <div>\n              <div style={titleStyle}> Selected Marker </div>\n\n              {/* active marker entry */}\n              <TableEntry\n                activeMarker = {this.state.activeMarker}\n                marker={this.state.activeMarker}\n                >\n              </TableEntry>\n\n              {/* active marker's twitter feed */}\n              <Timeline\n                dataSource={{\n                  sourceType: 'profile',\n                  screenName: (this.state.activeMarker.Handle).toString(),\n                }}\n                options={{\n                  username: 'Twitter Widget',\n                  height: '400'\n                }}\n              />\n\n              {/* divider */}\n              <div style = {{\n                border: '1px solid whitesmoke',\n              }} />\n\n              {/* influencer list */}\n              <div style={titleStyle}> Influencers </div>\n              {(this.state.data).map((marker, index) => (\n                    <TableEntry\n                      key={index}\n                      index={index}\n                      activeMarker = {this.state.activeMarker}\n                      marker={marker}\n                      >\n                    </TableEntry>\n                ))}\n              </div>\n          </SplitterLayout>\n          }\n        </div>\n        // ====\n      );\n    }\n  }\n\n\n    }\n\n\n  export default SimpleMap;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}